% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SWISS.R
\name{readSwissTournament}
\alias{readSwissTournament}
\alias{summary.SwissTournament}
\alias{print.SwissTournament}
\alias{print.SwissTournamentSummary}
\title{Read files of the SWISS tournament software}
\usage{
readSwissTournament(filename)

\method{summary}{SwissTournament}(object, ...)

\method{print}{SwissTournament}(x, fullReport = FALSE, ...)

\method{print}{SwissTournamentSummary}(x, fullReport = FALSE, ...)
}
\arguments{
\item{filename}{(character) name of the XML file returned by the program}

\item{object}{a valid SwissTournament object}

\item{...}{additional possible parameters passed on to other functions (not used yet)}

\item{x}{a valid SwissTournament or SwissTournamentSummary object}

\item{fullReport}{(logical) print a full ranking over each round or only the latest ranking}
}
\value{
\code{readSwissTournament} returns a S3 object SwissTournament, which is implemente as a list with the following entries:
\itemize{
\item tournamentVersion (integer)
\item scoreCalculation (character)
\item rankingComparator (character)
\item teams (a data.frame of teams)
  \itemize{
    \item entryId (integer)
    \item teamName (character)
    \item teamCity (character)
  }
\item rounds (a data.frame of all rounds and matches)
  \itemize{
    \item round (integer)
    \item game (interger)
    \item entryId1 (integer)
    \item entryId2 (integer)
    \item points1 (integer)
    \item points2 (integer)
    \item finished (logical)
  }
}
\code{summary} returns an object of class SwissTournamentSummary, which is a derived class of SwissTournament and contains all fields of the original SwissTorunament plus the following fields:
\itemize{
\item stats (list)
  \itemize{
    \item teamsParticipating (integer)
    \item roundsPlayed (integer)
    \item roundsSceduled (integer)
    \item matchesPlayed (integer)
    \item matchesScheduled (integer)
  }
\item rankings (a data.frame of rankings and related values)
  \itemize{
    \item round (integer)
    \item rank (integer)
    \item entryId (integer)
    \item opp (a list of integers) each entry indicates a opponent team thats already been played against
    \item scoreCum (integer) cumulated game scores with respect to selected scoring function
    \item pointsCum (integer) cumulated points scored
    \item pointsDiffCum (integer) cumulated point differences
    \item BHZ (integer) Buchholzzahl
  }
}
}
\description{
\code{readSwissTournament} returns all entries of a SWISS tournament.
\code{summary} returns a ranking summary of a SWISS tournament.
}
\details{
The SWISS tournament software is a old (2008) piece of software that allows
to manage a jugger tournament as a variant of the SWISS system. It returns a
XML file with all tournament information, teams, rounds, matches and results.
This function reads those information into R for analysis purposes.
}
\examples{

\dontrun{
# reads the tournament
hanseaticjuggercup2012 <- readSwissTournament("HanseaticJuggerCupR6")

# ad hoc information about rankings
summary(hanseaticjuggercup2012)
}
}
\author{
Christian Beck
}
